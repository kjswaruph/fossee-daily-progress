#!/bin/bash

testInput() {
	# TODO chekc all four variables are not empty and have valid formats

	if [[ -z "$CLIENT_ID" ]]; then
		echo "Error: CLIENT_ID is empty." >&2
		return 1
	fi

	if [[ -z "$CLIENT_SECRET" ]]; then
		echo "Error: CLIENT_SECRET is empty." >&2
		return 1
	fi

	if [[ -z "$KEYCLOAK_BASE" ]]; then
		echo "Error: KEYCLOAK_BASE is empty." >&2
		return 1
	fi

	if [[ -z "$KEYCLOAK_REALM" ]]; then
		echo "Error: KEYCLOAK_REALM is empty." >&2
		return 1
	fi
}

userCreate() {
	chmod +x /var/www/html/vendor/bin/drush
	/var/www/html/vendor/bin/drush user-create ${DRUPAL_USER} --mail="testmail@gmail.com" --password=${DRUPAL_USER_PASSWORD}
	/var/www/html/vendor/bin/drush user-add-role "administrator" ${DRUPAL_USER}
	## run as non root
}

moduleInstall() {
	#TODO cehck if moduels already installed
	composer require drupal/openid_connect drupal/keycloak
	#TODO check if moduels already enabled
	/var/www/html/vendor/bash/drush en keycloak -y
	/var/www/html/vendor/bash/drush en openid_connect -y
	/var/www/html/vendor/bash/drush cr
}

createClient() {
	vendor/bin/drush config:set openid_connect.settings.keycloak enabled true -y && \ 
	vendor/bin/drush config:set openid_connect.settings.keycloak settings.client_id "${CLIENT_ID}" -y && \ 
	vendor/bin/drush config:set openid_connect.settings.keycloak settings.client_secret "${CLIENT_SECRET}" -y && \ 
	vendor/bin/drush config:set openid_connect.settings.keycloak settings.keycloak_base "${KEYCLOAK_BASE}" -y && \ 
	vendor/bin/drush config:set openid_connect.settings.keycloak settings.keycloak_realm "${KEYCLOAK_REALM}" -y && \ 
	vendor/bin/drush config:set openid_connect.settings.keycloak settings.userinfo_update_email false -y && \ 
	vendor/bin/drush config:set openid_connect.settings.keycloak settings.keycloak_groups.enabled false -y && \ 
	vendor/bin/drush config:set openid_connect.settings.keycloak settings.keycloak_groups.claim_name groups -y && \ 
	vendor/bin/drush config:set openid_connect.settings.keycloak settings.keycloak_groups.split_groups false -y && \ 
	vendor/bin/drush config:set openid_connect.settings.keycloak settings.keycloak_groups.split_groups_limit '0' -y && \ 
	vendor/bin/drush config:set openid_connect.settings.keycloak settings.keycloak_groups.rules "[]" -y && \ 
	vendor/bin/drush config:set openid_connect.settings.keycloak settings.keycloak_sso true -y && \ 
	vendor/bin/drush config:set openid_connect.settings.keycloak settings.keycloak_sign_out true -y && \ 
	vendor/bin/drush config:set openid_connect.settings.keycloak settings.check_session.enabled false -y && \ 
	vendor/bin/drush config:set openid_connect.settings.keycloak settings.check_session.interval null -y && \ 
	vendor/bin/drush config:set openid_connect.settings.keycloak settings.redirect_url '' -y && \ 
	vendor/bin/drush config:set openid_connect.settings.keycloak settings.keycloak_i18n_enabled false -y && \ 
	vendor/bin/drush cr

	if [ $? -ne 0 ]; then
		echo "Error: Failed during Drupal configuration." >&2
		return 1
	fi

	return 0
}

DRUPAL_USER=""
DRUPAL_USER_PASSWORD=""
KEYCLOAK_BASE=""
KEYCLOAK_REALM=""
CLIENT_ID=""
CLIENT_SECRET=""

main() {

	if [[ "$1" == "--client-id" ]]; then
		CLIENT_ID="$2"
		shift 2
	fi

	if [[ "$1" == "--client-secret" ]]; then
		CLIENT_SECRET="$2"
		shift 2
	fi

	if [[ "$1" == "--base" ]]; then
		KEYCLOAK_BASE="$2"
		shift 2
	fi

	if [[ "$1" == "--realm" ]]; then
		KEYCLOAK_REALM="$2"
		shift 2
	fi

	{
		testInput &&
			userCreate &&
			moduleInstall &&
			createClient &&
			echo
		echo "::: Drupal OpenID Connect Setup Complete :::"
	} || {
		echo
		echo "!!! Drupal OpenID Connect Setup Failed !!!"
	}
}

main "$@"
